name: Create Version

on:
  workflow_call:
    outputs:
      version:
        description: The name of the release e.g. v1.1.1
        value: ${{ jobs.create-version.outputs.version }}
    inputs:
      test:
        type: boolean
        description: Whether this is a test run
        default: false
      prerelease:
        type: boolean
        description: Prerelease?
        required: false
        default: false

permissions:
  contents: write

jobs:
  create-version:
    name: Create Version
    runs-on: ubuntu-latest
    outputs:
      version: "v${{ env.REVISION }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate version
        uses: commitizen-tools/commitizen-action@0.21.0
        with:
          github_token: ${{ secrets.COMMITIZEN_TOKEN }}
          changelog_increment_filename: body.md
          dry_run: true

      - name: Update Npm Version
        if: env.REVISION != '' && inputs.test != true
        run: |
          if [ -f "package.json" ] && [ -w "package.json" ]; then
            npm version ${{ env.REVISION }} --no-git-tag-version
          fi

      - name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@0.21.0
        if: inputs.prerelease == false
        with:
          github_token: ${{ secrets.COMMITIZEN_TOKEN }}
          changelog_increment_filename: body.md
          dry_run: ${{ inputs.test }}

      - name: Create prerelease
        uses: commitizen-tools/commitizen-action@0.21.0
        if: inputs.prerelease
        with:
          github_token: ${{ secrets.COMMITIZEN_TOKEN }}
          changelog_increment_filename: body.md
          changelog: false
          prerelease: "rc"
          dry_run: ${{ inputs.test }}

      - name: Create GH Release
        if: env.REVISION != '' && inputs.test != true
        uses: softprops/action-gh-release@v1
        with:
          body_path: "body.md"
          tag_name: "v${{ env.REVISION }}"
          prerelease: ${{ inputs.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.COMMITIZEN_TOKEN }}