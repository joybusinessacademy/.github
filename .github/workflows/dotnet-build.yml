name: Build

on:
  workflow_call:
    inputs:
      runs-on:
        type: string
        description: The target OS, defaults to ubuntu-22.04
        default: ubuntu-22.04
        required: false
      project-path:
        type: string
        description: The path to the project to build
        required: true
      dotnet-version:
        type: string
        description: The dotnet version to use ['3.1.x', '6.0.x'], defaults to 6.0.x
        default: 6.0.x
        required: false
    secrets:
      NUGET_SOURCE_URL:
        required: true
      NUGET_AUTH_TOKEN:
        required: true

jobs:
  build:
    name: Build
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache dependencies
        id: cache-nuget
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys:
            ${{ runner.os }}-nuget

      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.dotnet-version }}
          source-url: ${{ secrets.NUGET_SOURCE_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_AUTH_TOKEN }}

      - name: Restore dependencies
        if: steps.cache-nuget.outputs.cache-hit  != 'true'
        working-directory: ${{ inputs.project-path }}
        shell: bash
        run: |
          dotnet restore --locked-mode

      - name: Build
        shell: bash
        run: |
          dotnet build -c Release ${{ inputs.project-path }} --no-restore --output ./output

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: output
